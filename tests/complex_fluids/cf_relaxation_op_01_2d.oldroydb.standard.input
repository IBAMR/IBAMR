// grid spacing parameters
MAX_LEVELS = 1                            // maximum number of levels in locally refined grid
REF_RATIO  = 4                            // refinement ratio between levels
N = 32                                    // actual    number of grid cells on coarsest grid level
NFINEST = (REF_RATIO^(MAX_LEVELS - 1))*N  // effective number of grid cells on finest   grid level

// Complex Fluid parameters
RELAX_OP = "OLDROYDB"
EVOLUTION_TYPE = "STANDARD"
RELAXATION_TIME = 0.1

ComplexFluid {
   relaxation_time = RELAXATION_TIME
   evolve_type = EVOLUTION_TYPE
   FCN {
       function_0 = "0.0"
       function_1 = "0.0"
       function_2 = "0.0"
   }
}

Main {
// log file parameters
   log_file_name               = "output"
   log_all_nodes               = FALSE

// visualization dump parameters
   viz_writer                  = "VisIt"
   viz_dump_interval           = 0
   viz_dump_dirname            = "visit"
   visit_number_procs_per_file = 1

// restart dump parameters
   restart_dump_interval       = 0
   restart_dump_dirname        = "restart_INS2d"

// timer dump parameters
   timer_dump_interval         = 0
}

CartesianGeometry {
   domain_boxes = [ (0,0),(N - 1,N - 1) ]
   x_lo = 0.0, 0.0
   x_up = 1.0, 1.0
   periodic_dimension = 1,1
}

GriddingAlgorithm {
   max_levels = MAX_LEVELS
   ratio_to_coarser {
      level_1 = REF_RATIO,REF_RATIO
      level_2 = REF_RATIO,REF_RATIO
      level_3 = REF_RATIO,REF_RATIO
   }
   largest_patch_size {
      level_0 = 512,512  // all finer levels will use same values as level_0
   }
   smallest_patch_size {
      level_0 =   4,  4  // all finer levels will use same values as level_0
   }
   efficiency_tolerance = 0.85e0  // min % of tag cells in new patch level
   combine_efficiency   = 0.85e0  // chop box if sum of volumes of smaller boxes < efficiency * vol of large box
}

StandardTagAndInitialize {
   tagging_method = "REFINE_BOXES"
   RefineBoxes {
      level_0 = [( N/4,N/4 ),( 3*N/4 - 1,N/2 - 1 )],[( N/4,N/2 ),( N/2 - 1,3*N/4 - 1 )]
   }
}

LoadBalancer {
   bin_pack_method     = "SPATIAL"
   max_workload_factor = 1
}

TimerManager{
   print_exclusive = FALSE
   print_total     = TRUE
   print_threshold = 0.1
   timer_list      = "IBAMR::*::*","IBTK::*::*","*::*::*"
}
