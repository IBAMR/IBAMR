// physical parameters
PI = 3.14159265358979
KAPPA = 1.0

// Solid level set information
RADIUS = 1.5

// grid spacing parameters
MAX_LEVELS = 1                            // maximum number of levels in locally refined grid
REF_RATIO  = 2                            // refinement ratio between levels
N = 240                                   // actual number of grid cells on coarsest grid level
NFINEST = (REF_RATIO^(MAX_LEVELS - 1))*N  // effective number of grid cells on finest   grid level

ETA = 1e-8
NUMBER_OF_INTERFACE_CELLS = 2.0
FLUID_IS_INTERIOR_TO_CYLINDER = FALSE     // flag to identify whether the fluid is inside the                                            cylinder or outside
BrinkmanPenalization {
    chi = ETA
}

// exact solution function expressions
q = "sin(X_0)*sin(X_1)"
F_q = "2*kappa*sin(X_0)*sin(X_1)"

TransportedQuantityExactSolutions {
   function = q
}

TransportedQuantityInitialConditions {
   function = "0.0"
}

TransportedQuantityBcCoefs {
   acoef_function_0 = "1.0"
   acoef_function_1 = "1.0"
   acoef_function_2 = "1.0"
   acoef_function_3 = "1.0"

   bcoef_function_0 = "0.0"
   bcoef_function_1 = "0.0"
   bcoef_function_2 = "0.0"
   bcoef_function_3 = "0.0"

   gcoef_function_0 = q
   gcoef_function_1 = q
   gcoef_function_2 = q
   gcoef_function_3 = q
}

PhiBcCoefs {
   acoef_function_0 = "0.0"
   acoef_function_1 = "0.0"
   acoef_function_2 = "0.0"
   acoef_function_3 = "0.0"

   bcoef_function_0 = "1.0"
   bcoef_function_1 = "1.0"
   bcoef_function_2 = "1.0"
   bcoef_function_3 = "1.0"

   gcoef_function_0 = "0.0"
   gcoef_function_1 = "0.0"
   gcoef_function_2 = "0.0"
   gcoef_function_3 = "0.0"
}

TransportedQuantityForcingFunction {
   kappa = KAPPA
   function = F_q
}

// solver parameters
SOLVER_TYPE          = "SEMI_IMPLICIT"      // the fluid solver to use (GODUNOV or SEMI_IMPLICIT)
START_TIME           = 0.0e0                // initial simulation time
END_TIME             = 100.0                // final simulation time
GROW_DT              = 2.0e0                // growth factor for timesteps
NUM_CYCLES           = 1                   // number of cycles of fixed-point iteration
CONVECTIVE_TS_TYPE   = "FORWARD_EULER"   // convective time stepping type
CONVECTIVE_OP_TYPE   = "CUI"                  // convective differencing discretization type
CONVECTIVE_FORM      = "ADVECTIVE"          // how to compute the convective terms
DIFFUSION_TS_TYPE    = "BACKWARD_EULER"   // diffusion time stepping type
CFL_MAX              = 0.25                  // maximum CFL number
DT_MAX               = 100.0       // maximum timestep size
TAG_BUFFER           = 1                    // sized of tag buffer used by grid generation algorithm
REGRID_INTERVAL      = 10000000             // effectively disable regridding
ENABLE_LOGGING       = TRUE
MAX_INTEGRATOR_STEPS = 1                  // maximum number of integrator steps
BRINKMAN_TIME_INDEPENDENT     = TRUE              // to zero out the temporal contribution



AdvectorExplicitPredictorPatchOps {
// Available values for limiter_type:
// "CTU_ONLY", "MINMOD_LIMITED", "MC_LIMITED",
// "SUPERBEE_LIMITED", "MUSCL_LIMITED"
// "SECOND_ORDER", "FOURTH_ORDER",
// "PPM", "XSPPM7"
   limiter_type = "XSPPM7"
   using_full_ctu = TRUE
}

AdvDiffSemiImplicitHierarchyIntegrator {
   start_time                    = START_TIME
   end_time                      = END_TIME
   grow_dt                       = GROW_DT
   num_cycles                    = NUM_CYCLES
   convective_time_stepping_type = CONVECTIVE_TS_TYPE
   diffusion_time_stepping_type  = DIFFUSION_TS_TYPE
   convective_op_type            = CONVECTIVE_OP_TYPE
   convective_difference_form    = CONVECTIVE_FORM
   cfl                           = CFL_MAX
   dt_max                        = DT_MAX
   tag_buffer                    = TAG_BUFFER
   enable_logging                = ENABLE_LOGGING
   max_integrator_steps          = MAX_INTEGRATOR_STEPS
   brinkman_time_independent     = BRINKMAN_TIME_INDEPENDENT
}

Main {
   solver_type = SOLVER_TYPE

// log file parameters
   log_file_name               = "BP_Poisson2d.log"
   log_all_nodes               = FALSE

// visualization dump parameters
   viz_writer                  = "VisIt"
   viz_dump_interval           = 1
   viz_dump_dirname            = "viz_BP_Poisson2d"
   visit_number_procs_per_file = 1

// restart dump parameters
   restart_dump_interval       = 0
   restart_dump_dirname        = "restart_BP_Poisson2d"

// timer dump parameters
   timer_dump_interval         = 0
}

CartesianGeometry {
   domain_boxes = [ (0,0),(N - 1,N - 1) ]
   x_lo = 0.0, 0.0
   x_up = 2.0*PI, 2.0*PI
   periodic_dimension = 0,0
}

GriddingAlgorithm {
   max_levels = MAX_LEVELS
   ratio_to_coarser {
      level_1 = REF_RATIO,REF_RATIO
      level_2 = REF_RATIO,REF_RATIO
      level_3 = REF_RATIO,REF_RATIO
   }
   largest_patch_size {
      level_0 = 512,512  // all finer levels will use same values as level_0
   }
   smallest_patch_size {
      level_0 =   4,  4  // all finer levels will use same values as level_0
   }
   efficiency_tolerance = 0.85e0  // min % of tag cells in new patch level
   combine_efficiency   = 0.85e0  // chop box if sum of volumes of smaller boxes < efficiency * vol of large box
}

StandardTagAndInitialize {
   tagging_method = "REFINE_BOXES"
   RefineBoxes {
//    level_0 = [((REF_RATIO^0)*N/4 + 0,(REF_RATIO^0)*N/4 + 0),(3*(REF_RATIO^0)*N/4 - 1,3*(REF_RATIO^0)*N/4 - 1)]
//    level_0 = [(0,0),(N/2 - 1,N/2 - 1)]
      level_0 = [( N/4,N/4 ),( 3*N/4 - 1,N/2 - 1 )],[( N/4,N/2 ),( N/2 - 1,3*N/4 - 1 )]
   }
}

LoadBalancer {
   bin_pack_method     = "SPATIAL"
   max_workload_factor = 1
}

TimerManager{
   print_exclusive = FALSE
   print_total     = TRUE
   print_threshold = 0.1
   timer_list      = "IBAMR::*::*","IBTK::*::*","*::*::*"
}
