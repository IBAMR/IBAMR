USE_BOUNDARY_MESH = TRUE

L   = 1.0
MAX_LEVELS = 2
REF_RATIO  = 4
N = 64
NFINEST = (REF_RATIO^(MAX_LEVELS - 1))*N
DX  = 0.2/4 // = R/4 so that we refine exactly twice
MFAC = 1.0
ELEM_TYPE = "HEX27"

IBHierarchyIntegrator {}
IBFEMethod { enable_logging = FALSE}

INSStaggeredHierarchyIntegrator {
   mu             = 1
   rho            = 1
}

Main {
   solver_type   = "STAGGERED"
   log_file_name = "output"
   log_all_nodes = FALSE
}

CartesianGeometry {
   domain_boxes = [ (0,0,0),(N - 1,N - 1,N - 1) ]
   x_lo = 0,0,0
   x_up = L,L,L
   periodic_dimension = 0,0,0
}

GriddingAlgorithm {
   max_levels = MAX_LEVELS
   ratio_to_coarser {
      level_1 = REF_RATIO,REF_RATIO,REF_RATIO
      level_2 = REF_RATIO,REF_RATIO,REF_RATIO
      level_3 = REF_RATIO,REF_RATIO,REF_RATIO
   }
   largest_patch_size {
      level_0 = 512,512,512  // all finer levels will use same values as level_0
   }
   smallest_patch_size {
      level_0 =   16,  16,  16  // all finer levels will use same values as level_0
   }
}

StandardTagAndInitialize {tagging_method = "GRADIENT_DETECTOR"}
LoadBalancer {}
