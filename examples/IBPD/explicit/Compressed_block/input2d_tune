// constants
PI = 3.14159265358979

// physical parameters
MU  = 1.0e-2
RHO = 1.0
L_X = 40.0
L_Y = 40.0
L_D = 20.0 // longest side
U_MAX = 5.0

// model parameters
POISSON_RATIO = NU_TEMP
HORIZON_SIZE = HORIZON_TEMP

// grid spacing parameters
MAX_LEVELS = 1                                    // maximum number of levels in locally refined grid
REF_RATIO  = 2                                    // refinement ratio between levels
M = M_TEMP						                             // number of nodes per edge of Lagrangian mesh
MFAC = 0.5	                                         // ratio of Lagrangian mesh width to Cartesian mesh width of the rectangular
REF_FACTOR = (REF_RATIO^(MAX_LEVELS - 1))
N = ceil(M * MFAC * L_X / L_D /REF_FACTOR)        // actual    number of grid cells on coarsest grid level
NFINEST = REF_FACTOR*N      		                 // effective number of grid cells on finest   grid level
DX0 = L_X/N                                       // mesh width on coarsest grid level
DX  = L_X/NFINEST                                 // mesh width on finest   grid level
N_X = N
N_Y = N_X * (L_Y / L_X)

// problem parameters
SMOOTH_CASE = FALSE

VelocityInitialConditions {
   function_0 = "0.0"
   function_1 = "0.0"
}

PressureInitialConditions {
   function = "0.0"
}


// solver parameters
DELTA_FUNCTION      = "IB_4"
// DT                  = 1.0e-4                   // maximum timestep size
START_TIME          = 0.0e0                    // initial simulation time
END_TIME            = 500.0                    // final simulation time
GROW_DT             = 2.0e0                    // growth factor for timesteps
NUM_CYCLES          = 1                        // number of cycles of fixed-point iteration
CONVECTIVE_TS_TYPE  = "ADAMS_BASHFORTH"        // convective time stepping type
CONVECTIVE_OP_TYPE  = "PPM"                    // convective differencing discretization type
CONVECTIVE_FORM     = "ADVECTIVE"              // how to compute the convective terms
NORMALIZE_PRESSURE  = FALSE                    // whether to explicitly force the pressure to have mean zero
CFL_MAX             = 0.2                      // maximum CFL number
DT                  = .025*CFL_MAX*DX/U_MAX    // maximum timestep size
// DT                  = 1.0e-4                   // maximum timestep size
// END_TIME            = DT                     // final simulation time
ERROR_ON_DT_CHANGE  = FALSE                    // whether to emit an error message if the time step size changes
VORTICITY_TAGGING   = FALSE                    // whether to tag cells for refinement based on vorticity thresholds
TAG_BUFFER          = 1                        // size of tag buffer used by grid generation algorithm
// REGRID_INTERVAL     = 10000000
REGRID_CFL_INTERVAL = 1.0e15                   // regrid whenever any material point could have moved 0.5 meshwidths since previous regrid
OUTPUT_U            = TRUE
OUTPUT_P            = TRUE
OUTPUT_F            = TRUE
OUTPUT_OMEGA        = TRUE
OUTPUT_DIV_U        = TRUE
ENABLE_LOGGING      = TRUE


VelocityBcCoefs_0 {
   acoef_function_0 = "1.0"
   acoef_function_1 = "1.0"
   acoef_function_2 = "1.0"
   acoef_function_3 = "1.0"

   bcoef_function_0 = "0.0"
   bcoef_function_1 = "0.0"
   bcoef_function_2 = "0.0"
   bcoef_function_3 = "0.0"

   gcoef_function_0 = "0.0"
   gcoef_function_1 = "0.0"
   gcoef_function_2 = "0.0"
   gcoef_function_3 = "0.0"
}

VelocityBcCoefs_1 {
   acoef_function_0 = "1.0"
   acoef_function_1 = "1.0"
   acoef_function_2 = "1.0"
   acoef_function_3 = "1.0"

   bcoef_function_0 = "0.0"
   bcoef_function_1 = "0.0"
   bcoef_function_2 = "0.0"
   bcoef_function_3 = "0.0"

   gcoef_function_0 = "0.0"
   gcoef_function_1 = "0.0"
   gcoef_function_2 = "0.0"
   gcoef_function_3 = "0.0"
}


IBHierarchyIntegrator {
   start_time          = START_TIME
   end_time            = END_TIME
   grow_dt             = GROW_DT
   num_cycles          = NUM_CYCLES
//   regrid_interval     = REGRID_INTERVAL
   regrid_cfl_interval = REGRID_CFL_INTERVAL
   dt_max              = DT
   error_on_dt_change  = ERROR_ON_DT_CHANGE
//   tag_buffer          = TAG_BUFFER
   enable_logging      = ENABLE_LOGGING
}

IBPDForceGen {
    horizon        = HORIZON_SIZE
    ds             = MFAC * DX
}

IBPDMethod {
   delta_fcn      = DELTA_FUNCTION
   enable_logging = ENABLE_LOGGING
//   use_mean_displacement = TRUE
}

IBStandardInitializer {
   max_levels      = MAX_LEVELS
   structure_names = "SHEET2D_TEMP"
   posn_shift = 0.0 , 0.0 

   SHEET2D_TEMP {
      level_number = MAX_LEVELS - 1
   }
}

INSStaggeredHierarchyIntegrator {
   mu                            = MU
   rho                           = RHO
   start_time                    = START_TIME
   end_time                      = END_TIME
   grow_dt                       = GROW_DT
   convective_time_stepping_type = CONVECTIVE_TS_TYPE
   convective_op_type            = CONVECTIVE_OP_TYPE
   convective_difference_form    = CONVECTIVE_FORM
   normalize_pressure            = NORMALIZE_PRESSURE
   cfl                           = CFL_MAX
   dt_max                        = DT
   using_vorticity_tagging       = VORTICITY_TAGGING
   vorticity_rel_thresh          = 0.25,0.125
   tag_buffer                    = TAG_BUFFER
   output_U                      = OUTPUT_U
   output_P                      = OUTPUT_P
   output_F                      = OUTPUT_F
   output_Omega                  = OUTPUT_OMEGA
   output_Div_U                  = OUTPUT_DIV_U
   enable_logging                = ENABLE_LOGGING
}

Main {
// log file parameters
   log_file_name               = "IB2d.log"
   log_all_nodes               = FALSE

// visualization dump parameters
   viz_writer                  = "VisIt","Silo"
   viz_dump_interval           = 1000
   viz_dump_dirname            = "viz_IB2d"
   visit_number_procs_per_file = 1

// restart dump parameters
   restart_dump_interval       = 0
   restart_dump_dirname        = "restart_IB2d"

// hierarchy data dump parameters
   data_dump_interval          = 0
   data_dump_dirname           = "hier_data_IB2d"

// timer dump parameters
   timer_dump_interval         = 0
}

CartesianGeometry {
   domain_boxes = [ (0,0),(N_X - 1,N_Y - 1) ]
   x_lo = 0,0
   x_up =  L_X, L_Y
   periodic_dimension = 0, 0
}

GriddingAlgorithm {
   max_levels = MAX_LEVELS
   ratio_to_coarser {
      level_1 = REF_RATIO,REF_RATIO, REF_RATIO
      level_2 = REF_RATIO,REF_RATIO, REF_RATIO
      level_3 = REF_RATIO,REF_RATIO, REF_RATIO
      level_4 = REF_RATIO,REF_RATIO, REF_RATIO
      level_5 = REF_RATIO,REF_RATIO, REF_RATIO
   }
   largest_patch_size {
      level_0 = 512,512  // all finer levels will use same values as level_0
   }
   smallest_patch_size {
      level_0 =   8,  8  // all finer levels will use same values as level_0
   }
   efficiency_tolerance = 0.85e0  // min % of tag cells in new patch level
   combine_efficiency   = 0.85e0  // chop box if sum of volumes of smaller boxes < efficiency * vol of large box
}

StandardTagAndInitialize {
   tagging_method = "GRADIENT_DETECTOR"
}

LoadBalancer {
   bin_pack_method     = "SPATIAL"
   max_workload_factor = 1
}

TimerManager{
   print_exclusive = FALSE
   print_total     = TRUE
   print_threshold = 0.1
   timer_list      = "IBAMR::*::*","IBTK::*::*","*::*::*"
}
