// constants
PI = 3.14159265358979e+0

// Foil parameters
L       = 1.0                  // cord length (c)
R       = 0.05                 // radius of foil head (b/2)
FREQ    = 1.0                  // pitching frequency (1/s)
ANGLE   = 20.0                 // pitching amplitude in degree
THETA_0 =  ANGLE * PI / 180.0  // pitching amplitude in radian

// Flow parameters
RHO_RATIO = 1.0        // RHO_RATIO = RHO_S / RHO_F. Same as mass ratio
Re        = 200.0
RHO_F     = 1.0
RHO_S     = RHO_F * RHO_RATIO
U         = 1.0
MU        = RHO_F * U * L / Re

// FSI parameters
MU_F     = MU
MASS     = RHO_S * (( PI * R * R / 2.0 ) + ( 2.0 * R * (L - R) / 2.0))

// Foil coordinates
X_COM = 52.0
Y_COM = 10.0
X1    = X_COM
Y1    = Y_COM + R
X2    = X_COM
Y2    = Y_COM - R
X3    = X_COM - R + L
Y3    = Y_COM

// grid spacing parameters
MAX_LEVELS = 3       // maximum number of levels in locally refined grid
REF_RATIO  = 4        // refinement ratio between levels
REF_RATIO_FINEST = 4  // refinement ratio for the finest level.

X_MAX = 60.0
Y_MAX = 20.0
Nx    = 375                              // coarsest grid spacing
Ny    = 125
NFINEST = (REF_RATIO^(MAX_LEVELS - 1))*Nx // finest   grid spacing
H_COARSEST = X_MAX/Nx


// Level set option parameters
LS_TAG_ABS_THRESH     = 0.03 // 2*H_COARSEST

VelocityInitialConditions {
   function_0 = "0.0"
   function_1 = "0.0"
}

PressureInitialConditions {
   function_0 = "0.0"
}

VelocityBcCoefs_0 {

   acoef_function_0 = "1.0"
   acoef_function_1 = "1.0"
   acoef_function_2 = "1.0"
   acoef_function_3 = "1.0"

   bcoef_function_0 = "0.0"
   bcoef_function_1 = "0.0"
   bcoef_function_2 = "0.0"
   bcoef_function_3 = "0.0"

   gcoef_function_0 = "0.0"
   gcoef_function_1 = "0.0"
   gcoef_function_2 = "0.0"
   gcoef_function_3 = "0.0"
}

VelocityBcCoefs_1 {
   acoef_function_0 = "1.0"
   acoef_function_1 = "1.0"
   acoef_function_2 = "1.0"
   acoef_function_3 = "1.0"

   bcoef_function_0 = "0.0"
   bcoef_function_1 = "0.0"
   bcoef_function_2 = "0.0"
   bcoef_function_3 = "0.0"

   gcoef_function_0 = "0.0"
   gcoef_function_1 = "0.0"
   gcoef_function_2 = "0.0"
   gcoef_function_3 = "0.0"
}

DensityBcCoefs {
   acoef_function_0 = "0.0"
   acoef_function_1 = "0.0"
   acoef_function_2 = "0.0"
   acoef_function_3 = "0.0"

   bcoef_function_0 = "1.0"
   bcoef_function_1 = "1.0"
   bcoef_function_2 = "1.0"
   bcoef_function_3 = "1.0"

   gcoef_function_0 = "0.0"
   gcoef_function_1 = "0.0"
   gcoef_function_2 = "0.0"
   gcoef_function_3 = "0.0"
}

ViscosityBcCoefs {
   acoef_function_0 = "0.0"
   acoef_function_1 = "0.0"
   acoef_function_2 = "0.0"
   acoef_function_3 = "0.0"

   bcoef_function_0 = "1.0"
   bcoef_function_1 = "1.0"
   bcoef_function_2 = "1.0"
   bcoef_function_3 = "1.0"

   gcoef_function_0 = "0.0"
   gcoef_function_1 = "0.0"
   gcoef_function_2 = "0.0"
   gcoef_function_3 = "0.0"
}

PhiBcCoefs {
   acoef_function_0 = "0.0"
   acoef_function_1 = "0.0"
   acoef_function_2 = "0.0"
   acoef_function_3 = "0.0"

   bcoef_function_0 = "1.0"
   bcoef_function_1 = "1.0"
   bcoef_function_2 = "1.0"
   bcoef_function_3 = "1.0"

   gcoef_function_0 = "0.0"
   gcoef_function_1 = "0.0"
   gcoef_function_2 = "0.0"
   gcoef_function_3 = "0.0"
}

// Simulation Parameters
START_TIME           = 0.0e0
END_TIME             = 65.0e0
GROW_DT              = 2.0e0
MAX_INTEGRATOR_STEPS = 1000000000
CFL_MAX              = 0.5
NUM_INS_CYCLES       = 1
CONVECTIVE_FORM      = "CONSERVATIVE"
NORMALIZE_PRESSURE   = TRUE
VORTICITY_TAGGING    = TRUE
TAG_BUFFER           = 2
REGRID_CFL_INTERVAL  = 0.2       // REGRID_CFL_INTERVAL
DT_MAX               = 0.0025
OUTPUT_U             = TRUE
OUTPUT_P             = TRUE
OUTPUT_F             = TRUE
OUTPUT_OMEGA         = TRUE
OUTPUT_DIV_U         = TRUE
OUTPUT_RHO           = TRUE
OUTPUT_MU            = TRUE
RHO_IS_CONST         = FALSE
MU_IS_CONST          = FALSE
ERROR_ON_DT_CHANGE   = FALSE

// Application
PRECOND_REINIT_INTERVAL      = 1
VC_INTERPOLATION_TYPE        = "VC_HARMONIC_INTERP"
DENSITY_CONVECTIVE_LIMITER   = "CUI"
VELOCITY_CONVECTIVE_LIMITER  = "CUI"
DENSITY_TS                   = "SSPRK3"
OPERATOR_SCALE_FACTORS       = 1.0
EXPLICITLY_REMOVE_NULLSPACE  = FALSE
ENABLE_LOGGING               = TRUE

// AdvDiff solver parameters
ADV_DIFF_NUM_CYCLES         = 1
ADV_DIFF_CONVECTIVE_TS_TYPE = "ADAMS_BASHFORTH"
ADV_DIFF_CONVECTIVE_OP_TYPE = "PPM"
ADV_DIFF_CONVECTIVE_FORM    = "CONSERVATIVE"

BrinkmanPenalization {
   penalty_factor      = 1.0                         // deafult 1.0                   
   use_rho_scale       = TRUE                        // default true
   use_mu_scale        = FALSE                       // default false
   contour_level       = 0.0                         // default 0.0 
   num_interface_cells = 2.0                         // default 2.0 
}

INSVCStaggeredConservativeHierarchyIntegrator {
   start_time                 = START_TIME
   end_time                   = END_TIME
   grow_dt                    = GROW_DT
   convective_difference_form = CONVECTIVE_FORM
   normalize_pressure         = NORMALIZE_PRESSURE
   cfl                        = CFL_MAX
   dt_max                     = DT_MAX
   using_vorticity_tagging    = VORTICITY_TAGGING
   vorticity_abs_thresh       = 1, 2, 4, 8
   tag_buffer                 = TAG_BUFFER
   regrid_interval            = 5
   output_U                   = OUTPUT_U
   output_P                   = OUTPUT_P
   output_F                   = OUTPUT_F
   output_Omega               = OUTPUT_OMEGA
   output_Div_U               = OUTPUT_DIV_U
   output_rho                 = OUTPUT_RHO
   output_mu                  = OUTPUT_MU
   rho_is_const               = RHO_IS_CONST
   mu_is_const                = MU_IS_CONST
   precond_reinit_interval    = PRECOND_REINIT_INTERVAL
   operator_scale_factors     = OPERATOR_SCALE_FACTORS
   vc_interpolation_type      = VC_INTERPOLATION_TYPE
   enable_logging             = ENABLE_LOGGING
   max_integrator_steps       = MAX_INTEGRATOR_STEPS
   explicitly_remove_nullspace= EXPLICITLY_REMOVE_NULLSPACE
   num_cycles                 = NUM_INS_CYCLES

   // Solver parameters
   velocity_solver_type = "VC_VELOCITY_PETSC_KRYLOV_SOLVER"
   velocity_precond_type = "VC_VELOCITY_POINT_RELAXATION_FAC_PRECONDITIONER"
   velocity_solver_db {
      ksp_type = "richardson"
      max_iterations = 1
      rel_residual_tol = 1.0e-1
   }
   velocity_precond_db {
      num_pre_sweeps = 0
      num_post_sweeps = 3
      prolongation_method = "CONSERVATIVE_LINEAR_REFINE"
      restriction_method = "CONSERVATIVE_COARSEN"
      coarse_solver_type = "VC_VELOCITY_PETSC_LEVEL_SOLVER"
      coarse_solver_rel_residual_tol = 1.0e-12
      coarse_solver_abs_residual_tol = 1.0e-50
      coarse_solver_max_iterations = 100
      coarse_solver_db {
         ksp_type = "gmres"
         pc_type = "jacobi"
      }
   }
    pressure_solver_type = "PETSC_KRYLOV_SOLVER"
    pressure_precond_type = "POINT_RELAXATION_FAC_PRECONDITIONER"
    pressure_solver_db
    {
      ksp_type = "richardson"
      max_iterations = 1
      rel_residual_tol = 1.0e-1
    }

    pressure_precond_db {
      num_pre_sweeps  = 0
      num_post_sweeps = 3
      prolongation_method = "LINEAR_REFINE"
      restriction_method  = "CONSERVATIVE_COARSEN"
      coarse_solver_type = "HYPRE_LEVEL_SOLVER"
      coarse_solver_rel_residual_tol = 1.0e-12
      coarse_solver_abs_residual_tol = 1.0e-50
      coarse_solver_max_iterations = 100
      coarse_solver_db {
         ksp_type = "gmres"
         pc_type = "jacobi"
      }
    }
    mass_momentum_integrator_db {
      density_time_stepping_type = DENSITY_TS
      velocity_convective_limiter = VELOCITY_CONVECTIVE_LIMITER
      density_convective_limiter = DENSITY_CONVECTIVE_LIMITER
    }

}

AdvDiffSemiImplicitHierarchyIntegrator {
   start_time                    = START_TIME
   end_time                      = END_TIME
   grow_dt                       = GROW_DT
   num_cycles                    = ADV_DIFF_NUM_CYCLES
   convective_time_stepping_type = ADV_DIFF_CONVECTIVE_TS_TYPE
   convective_op_type            = ADV_DIFF_CONVECTIVE_OP_TYPE
   convective_difference_form    = ADV_DIFF_CONVECTIVE_FORM
   cfl                           = CFL_MAX
   dt_max                        = DT_MAX
   tag_buffer                    = TAG_BUFFER
   enable_logging                = ENABLE_LOGGING
}


Main {

// log file parameters
   log_file_name    = "IBLevelSet_SelfPropellingFoil2d.log"
   log_all_nodes    = FALSE

// visualization dump parameters
   viz_writer            = "VisIt"
   viz_dump_interval     = 100               //zero to turn off
   viz_dump_dirname      = "viz_foil2d"
   visit_number_procs_per_file = 1

// restart dump parameters
   restart_interval      = 0                 // zero to turn off
   restart_write_dirname = "restart_IB2d"

// hierarchy data dump parameters
   hier_dump_interval = 0                    // zero to turn off
   hier_dump_dirname  = "hier_data_IB2d"

// timer dump parameters
   timer_dump_interval   = 0                 // zero to turn off

// post processor parameters
   postprocess_interval = 0                  // zero to turn off
}

CartesianGeometry {
   domain_boxes = [ (0, 0) , (Nx - 1 , Ny - 1) ]
   x_lo         =  0.0 , 0.0      // lower end of computational domain.
   x_up         =  X_MAX , Y_MAX  // upper end of computational domain.
   periodic_dimension = 1, 1
}

GriddingAlgorithm {
   allow_patches_smaller_than_minimum_size_to_prevent_overlaps = TRUE
   efficiency_tolerance   = 0.6e0    // min % of tag cells in new patch level
   combine_efficiency     = 0.8e0    // chop box if sum of volumes of smaller
                                     // boxes < efficiency * vol of large box

   max_levels = MAX_LEVELS           // Maximum number of levels in hierarchy.
   ratio_to_coarser {
      level_1 = REF_RATIO,REF_RATIO  // vector ratio to next coarser level
      level_2 = REF_RATIO, REF_RATIO
      level_3 = REF_RATIO,REF_RATIO
      level_4 = REF_RATIO,REF_RATIO
      level_5 = REF_RATIO,REF_RATIO
   }

   largest_patch_size {
      level_0 =512, 512  // largest patch allowed in hierarchy
                         // all finer levels will use same values as level_0...
   }

   smallest_patch_size {
      level_0 = 8, 8 // smallest patch allowed in hierarchy
                     // all finer levels will use same values as level_0...
   }

}

StandardTagAndInitialize {
   tagging_method = "GRADIENT_DETECTOR"
}

LoadBalancer {
   bin_pack_method     = "SPATIAL"
   max_workload_factor = 1
}

TimerManager{
   print_exclusive = FALSE
   print_total = TRUE
   print_threshold = 0.1

   timer_list = "IBAMR::*::*" , "IBTK::*::*" , "*::*::*"
}
