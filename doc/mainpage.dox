/*!
 * \mainpage
 *
 * <h2>%IBAMR: An adaptive and distributed-memory parallel implementation of the
 * immersed boundary (IB) method.</h2>
 *
 * <h3>What is %IBAMR?</h3>
 *
 * %IBAMR is a distributed-memory parallel implementation of the immersed
 * boundary (IB) method with support for Cartesian grid adaptive mesh refinement
 * (AMR). Support for distributed-memory parallelism is via <a
 * href="http://www.mcs.anl.gov/research/projects/mpi">MPI</a>, the Message
 * Passing Interface.
 *
 * Core IBAMR functionality relies upon several high-quality open-source
 * libraries, including:
 *
 * - <a href="https://computation.llnl.gov/projects/samrai">SAMRAI</a>, the
 *    Structured Adaptive Mesh Refinement Application Infrastructure
 * - <a href="http://www.mcs.anl.gov/petsc">PETSc</a>, the Portable, Extensible
 *    Toolkit for Scientific Computation
 * - <a href="http://libmesh.sourceforge.net"><tt>libMesh</tt></a>, a C++ finite
 *    element library
 * - <a
 *    href="http://computation.llnl.gov/casc/linear_solvers/sls_hypre.html"><i>hypre</i></a>,
 *    a library of high performance preconditioners that features parallel
 *    multigrid methods for both structured and unstructured grid problems.
 *
 * IBAMR also uses functionality provided by a number of additional third-party
 * libraries, including: <a href="http://www.boost.org">Boost</a>; <a
 * href="http://eigen.tuxfamily.org/index.php">Eigen</a>; <a
 * href="http://www.hdfgroup.org/HDF5">HDF5</a>; <a
 * href="http://muparser.beltoforion.de">muParser</a>; and <a
 * href="https://wci.llnl.gov/codes/silo">Silo</a>.
 *
 * IBAMR outputs visualization files that can be read by the <a
 * href="https://wci.llnl.gov/codes/visit">VisIt Visualization Tool</a>.
 *
 * <h3>What Is the IB Method?</h3>
 *
 * The immersed boundary (IB) method is a general-purpose numerical method for
 * simulating fluid-structure interaction.  The IB formulation of such problems
 * uses an Eulerian description of the fluid and a Lagrangian description of the
 * structure.  Interaction equations that couple the Eulerian and Lagrangian
 * variables take the form of integral equations with delta function kernels.
 *
 * For general information about the IB method, see <a
 * href="http://math.nyu.edu/faculty/peskin">http://math.nyu.edu/faculty/peskin</a>.
 * For visualizations of simulations that use IBAMR, see <a
 * href="http://cims.nyu.edu/~griffith">http://cims.nyu.edu/~griffith</a>.
 *
 * <h3>Support</h3>
 *
 * Support for IBAMR is available via the <a
 * href="http://groups.google.com/group/ibamr-users">IBAMR Users Google Group
 * (ibamr-users)</a>.  Discussion related to the continued development of IBAMR
 * is via the <a href="http://groups.google.com/group/ibamr-dev">IBAMR
 * Developers Google Group (ibamr-dev)</a>. There is also list of <a
 * href="https://github.com/IBAMR/IBAMR/wiki/FAQ">frequently asked
 * questions</a>).
 *
 * <h3>Bugs and Other Issues</h3>
 *
 * Please use the GitHub issue tracking system to report bugs, feature requests,
 * or other issues with IBAMR.
 *
 * <h3>Acknowledgments</h3>
 *
 * IBAMR development is supported in part by an NSF <i>Software Infrastructure
 * for Sustained Innovation</i> award (NSF OCI 1047734).  Work to extend IBAMR
 * to support finite element mechanics models is also supported in part by the
 * NSF (NSF DMS 1016554).  We gratefully acknowledge this support.
 */
